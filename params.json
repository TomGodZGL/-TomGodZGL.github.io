{"name":"Tomgodzgl.GitHub.io","tagline":"梁桑个人博客","body":"#梁桑个人博客#\r\n\r\n\r\n*此个人[博客](http://www.baidu.com)旨在技术交流，大家一起学习，欢迎大家指正*\r\n\r\n\r\n##大型网站优化##\r\n大型网站优化主要有以下两点：\r\n\r\n- 网站静态化\r\n- mysql优化\r\n\r\n###判断大型网站的基本概念###\r\n\r\n- pv值（page views）页面浏览量：\r\n是指，一个网站的所有页面，在一天内被访问的总的次数。达到千万级别以上，几百万以上\r\n- uv值（unique vistor）独立访客：是指一个网站，在一天内有多少个用户来访问我们的网站。一般几十万以上\r\n- 独立ip：是指一个网站，在一天内有多少个独立ip来访问我们的网站\r\n\r\n###大型网站带来的问题？###\r\n- 大的访问量（大并发）\r\n\r\n\t并发：是指在某个时间点，有多少个用户同时访问某个地址\r\n- 大的流量（带宽问题）\r\n\r\n\r\n- 海量的数据存储\r\n\r\n\t网站从小到大的数据的存储，比如数据表的容量达到GT级别，带来查询速度变慢，要从海量的数据表里面快速的查找到数据，是我们优化的重点。\r\n\r\n###大访问量问题###\r\n\r\n- 使用负载均衡以及分层架构服务器\r\n\r\n\t负载均衡说明：\r\n\r\n\t软件：lvs(linux virtual server)linux虚拟服务， nginx（web服务器，负载均衡）\r\n\r\n\t硬件：f5-bigip  :价格昂贵，立竿见影，效果非常好。一般是大的网游公司或大的门户网站使用\r\n\r\n\t负载均衡器的策略：\r\n\r\n\t- 轮询：载均衡把请求轮流转发给web服务器\r\n\t- 加权：配置性能高的，分配的权重就越大，处理的请求就越多\r\n\t- 最少连接：负载均衡把请求转发给最空闲的那台服务器\r\n\t- ip哈希：同一地址的客户端，负载均衡把请求始终给同一台服务器\r\n\r\n###大流量问题###\r\n- 在web 服务器端，配置压缩，减少数据传输的数据量\r\n\t\r\n\tApache上利用gzip压缩算法进行压缩的模块有两种：mod_gzip和mod_deflate. \r\n\r\n\t具体的步骤：\r\n\t\r\n\t1）打开apache的httpd.conf配置文件，开启压缩模块\r\n\t\r\n\t\tLoadModeule deflate_module modules/mod_deflate.so\t\r\n\r\n\t2）在虚拟主机里面，配置压缩的对象\r\n\r\n\t\t<ifmodule mod_deflate.c> \r\n\t\t\t#配置压缩的级别，压缩级别为6，可选1-9，推荐为6\r\n\t\t\tDeflateCompressionLevel 6\r\n\t\t\t#压缩文本文件      \r\n\t\t\tAddOutputFilterByType  DEFLATE text/plain   \r\n\t\t\t#压缩html文件\r\n\t\t\tAddOutputFilterByType  DEFLATE text/html   \r\n\t\t\t#压缩xml文件\r\n\t\t\tAddOutputFilterByType  DEFLATE text/xml    \r\n\t\t</ifmodule> \r\n\t\t注意：为什么要指定文件类型来压缩？\r\n\t\t压缩也是要耗费cpu资源的，图片/视频等文件，压缩效果不好，不要对其压缩。一般压缩的是文本格式的文件。\r\n\t\tDeflateCompressionLevel 指令来设置压缩级别。该指令的值可为1（压缩速度最快，最低的压缩质量）到9（最慢的压缩速度，压缩率最高）之间的整数，其默认值为6（压缩速度和压缩质量较为平衡的值）\r\n\r\n- 合并文件（样式文件，js文件，背景图片文件），减少http的请求\r\n\r\n- 把比较占用流量的资源（或不同的功能）单独部署服务器\r\n\r\n###大存储问题###\r\n- 使用缓存技术\r\n\r\n\t主要目的是：减少数据库的查询次数\r\n\t\r\n\t1）磁盘缓存（页面静态化）\r\n\r\n\t页面静态化，就是把一个动态（操作数据库）的页面，转换成一个.html页面。直接访问生成的.html页面。提高了访问速度，因为没有查询数据库\r\n\t\r\n\t2）内存缓存（redis/memcache）\r\n\r\n\t把数据缓存到服务器端的内存里面。下次访问时，直接从内存里面获取数据\r\n- 对mysql优化\r\n\r\n\t1）设计角度：存储引擎的选择，字段类型选择，范式\r\n\r\n\t2）利用mysql自身的特性：索引，查询缓存，分区分表，存储过程，sql语句优化配置，\r\n\r\n\t3）部署大负载架构体系：主从复制，读写分离。\r\n\r\n\t4）硬件升级\r\n\t\r\n\t**注**： 此mysql优化推荐参考 [骑着笨鸟慢慢飞](http://superve.leanote.com/) 个人技术博客\r\n\t \r\n###页面静态化详解###\r\n\r\n- 什么是页面静态化：\r\n\r\n\t就是把一个动态（操作数据库）的页面转换成一个.html页面。\r\n\t比如http://www.abc.com/goods.php?id=4;      \r\n\t可以变成http://www.abc.com/goods_id4.html\r\n \r\n\t页面静态化可以分为两种：真静态和伪静态。\r\n\t真静态：就是把一个动态的页面，实实在在的生成一个静态页面。\r\n\t伪静态：从形式上看是一个静态页面，实际上操作的还是动态页面。比如\r\n\thttp://www.abc.com/news-sport_id12.html\r\n\t实际上操作是：\r\n\thttp://www.abc.com/news.php?type=sport&id=12\r\n\r\n- 实现方式\r\n\r\n\t真静态的实现方式：使用ob缓存技术，ob缓存，缓存的内容是响应的主体数据。\r\n\r\n\t在请求一个php的过程中，我们实际上经过三个缓存，程序缓存，ob缓存，浏览器缓存。\r\n\r\n\t伪静态的实现方式：通过web服务器的重写机制，比如请求 index.html =》 index.php\r\n\r\n- 程序缓存\r\n\r\n\t该缓存是必须存在的，是无法关闭的。缓存的数据是响应的数据（响应的头和响应的主体数据）\r\n\r\n- ob缓存\r\n\r\n\tob就是 output_buffering:输出缓存，缓存的数据是响应的主体数据\r\n\t\r\n\t如果开辟了ob缓存，主体数据首先存储到ob缓存里面，头信息要存储到程序缓存（无论是否开启ob缓存），当代码执行完毕后，ob缓存里面的数据刷新（移动）到程序缓存，程序缓存再输出到浏览器缓存中，最后输出内容\r\n- 如何开启 ob缓存\r\n\r\n\t1）使用ob_start()函数，针对当前页面有效\r\n\r\n\t2）通过使用php.ini的配置文件来开启ob缓存，针对所有的页面都有效\r\n\r\n- ob相关的函数\r\n\r\n\tob_get_contents();//获取ob缓存里面的内容\r\n\r\n\tob_clean();//清空ob缓存里面的内容，不关闭ob缓存\r\n\t\r\n\tob_end_clean();//清空ob缓存里面的内容，并关闭ob缓存\r\n\r\n\tob_flush();//是把ob缓存里面的数据给刷新（移动）到程序缓存。不关闭ob缓存\r\n\r\n\tob_end_flush();是把ob缓存里面的数据给刷新（移动）到程序缓存。并关闭ob缓存\r\n\t\r\n\t获取ob缓存里面的数据内容：\r\n\r\n\t\t$content = ob_get_contents();响应主体的数据\r\n\t\tfile_put_contents(文件名称,’文件内容’);// 生成了一个静态页面\r\n\r\n- 真静态案例\r\n\t\r\n\t\t<?php \r\n\t\t\r\n\t\t    //接收参数\r\n\t\t    $goods_id = $_GET['goods_id'] + 0;\r\n\t\t    $lifetime = 24*3600*7;\r\n\t\t    //构造静态页面文件名\r\n\t\t    $filename = 'goods_' . $goods_id . '.html';\r\n\t\t\r\n\t\t    //判断文件是否存在且是否在生命周期中\r\n\t\t    if(file_exists($filename) && filemtime($filename) + $lifetime > time()) {\r\n\t\t        include $filename;\r\n\t\t        exit;\r\n\t\t    }\r\n\t\t    \r\n\t\t    //如果静态页面不存在，页面已经过期，则操作数据库\r\n\t\t    $link = mysql_connect('localhost:3306','root','root');\r\n\t\t    mysql_query('set names utf8');\r\n\t\t    mysql_query('use test');\r\n\t\t\r\n\t\t    $sql = \"select * from sh_goods where g_id = $goods_id\";\r\n\t\t    $res = mysql_query($sql);\r\n\t\t    $info = mysql_fetch_assoc($res);\r\n\t\t\r\n\t\t    ob_start();\r\n\t\t?>\r\n\t\t    <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n\t\t    <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"zh-CN\">\r\n\t\t    <head>\r\n\t\t    <title>商品详情页</title>\r\n\t\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t\t    <meta name=\"description\" content=\"\" />\r\n\t\t    <meta name=\"keywords\" content=\"\" />\r\n\t\t    <script type=\"text/javascript\">\r\n\t\t\r\n\t\t    </script>\r\n\t\t\r\n\t\t    <style type=\"text/css\">\r\n\t\t    </style>\r\n\t\t    </head>\r\n\t\t        <body>\r\n\t\t        <h1><?php echo $info['goods_name']?></h1>\r\n\t\t        <div><?php echo $info['goods_desc']?></div>\r\n\t\t        </body>\r\n\t\t    </html>\r\n\t\t\r\n\t\t<?php \r\n\t\t    $content = ob_get_contents();//获取ob缓存里面的数据内容\r\n\t\t    file_put_contents($filename,$content);\r\n\t\t\r\n\t\t?>\r\n###伪静态####\r\n\r\n实际开发项目中，我们的页面不适合使用真静态，但是你不仅希望页面安全性高，同时利于seo，可以考虑使用伪静态技术\r\n\r\n- 实现方式\r\n\r\n\t使用apache的重写模块，要开启重写模块（rewrite机制）。\r\n\t在重写模块中，要配置重写规则，在重写规则里面我们使用到正则表达式\r\n\r\n- 如何开启重写模块\r\n\r\n\t打开 httpd.conf文件，进行配置修改。添加rewrite_module模块\r\n\t\t\r\n\t\tLoadModule rewrite_module modules/mod_rewrite.so\r\n\r\n- 具体的重写规则的配置\r\n\r\n\t1）使用分布式文件配置，.htaccess文件\r\n\r\n\t2）在虚拟主机的配置文件中，要配置支持 .htaccess配置文件\r\n\r\n\t\tAllowOverride All\r\n\t\r\n\t3）在.htaccess文件中进行配置重写规则\r\n\t\t\r\n\t\tRewriteEngine  on \t开启重写引擎\r\n\t\tRewriteCond   \t\t重写条件\r\n\t\tRewriteRule\t\t\t重写规则\r\n\r\n\t4)RewriteCond重写条件语法\r\n\r\n\t\tRewriteCond 判断依据  条件表达式 [条件标志]\r\n\t\t\r\n\t5)案例说明\r\n\r\n\t\t<IfModule rewrite_module>\r\n\t\t\t#开启重写引擎\r\n\t\t\tRewriteEngine on\r\n\t\t\t#添加重写条件\r\n\t\t\tRewriteCond\t%{REQUEST_FILENAME} !-f\r\n\t\t\t#添加重写规则\r\n\t\t\tRewriteRule index.html\tindex.php\r\n\t\t</IfModule>\r\n\r\n\r\n- 防盗链\r\n\r\n\t1)为了防止外部使用网站图片资源可以添加水印\r\n\t\r\n\t2）利用重写机制，根据HTTP_PEFERER\r\n\r\n\t\t<IfModule rewrite_module>\r\n\t\t\tRewriteEngine on\r\n\t\t\t#判断URL的上一次访问是否本域名地址\r\n\t\t\tRewriteCond  %{HTTP_PEFERER} -www.demo.com[NC]\r\n\t\t\t#如果不会本网站访问，则禁止访问\r\n\t\t\tRewriteRule  \\.(jpg|png|jpeg|gif|bmp)\t-[F]\r\n\t\t</IfModule>\r\n\r\n\r\n##商品浏览记录代码实现##\r\n\r\n**获取商品历史浏览记录，利用thinkPHP框架开发，基于cookie实现**\r\n\r\n\tpublic function getHistory(){\r\n\t\t//判断cookie中时候有history数据存在\r\n\t\t$list = isset($_COOKIE['history']) ? unserialize($_COOKIE['history']) : array();\r\n\t\t$goods_id = (int)$_GET['id'];\r\n\t\t\r\n\t\t//判断用户是否浏览了商品\r\n\t\tif(!empty($goods_id)){\r\n\t\t\tif(!empty($list)){\t\t\r\n\t\t\t\t//获取商品ID\r\n\t\t\t\t$ids = array();\r\n\t\t\t\tforeach($list as $v){\r\n\t\t\t\t\t$ids[] = $v['goods_id'];\r\n\t\t\t\t}\r\n\t\t\t\t//判断商品是否已经存在,则删除\r\n\t\t\t\t$index = array_search($goods_id, $ids);\r\n\t\t\t\tif($index !== false){\r\n\t\t\t\t\t$history = $list[$index];\r\n\t\t\t\t\tunset($list[$index]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//根据商品ID获取商品详细信息\r\n\t\t\t\t\t$goodsinfo = M('Goods')->field('goods_name,shop_price,goods_thumb')->where(\"id = $goods_id\")->find();\r\n\t\t\t\t\t//构造新数组，并添加到浏览记录中\r\n\t\t\t\t\t$history = array(\r\n\t\t\t\t\t\t\t'goods_id'\t\t=>\t$goods_id,\r\n\t\t\t\t\t\t\t'goods_name'\t=>\t$goodsinfo['goods_name'],\r\n\t\t\t\t\t\t\t'shop_price'\t=>\t$goodsinfo['shop_price'],\r\n\t\t\t\t\t\t\t'goods_thumb'\t=>\t$goodsinfo['goods_thumb']\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t//判断商品记录是否大于3条\r\n\t\t\t\tif(count($list) > 3){\r\n\t\t\t\t\tarray_pop($list);\r\n\t\t\t\t}\r\n\t\t\t\t//往数组的头部添加数据\r\n\t\t\t\tarray_unshift($list, $history);\t\t\t\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t//根据商品ID获取商品详细信息\r\n\t\t\t\t\r\n\t\t\t\t$goodsinfo = M('Goods')->field('goods_name,shop_price,goods_thumb')->where(\"id = $goods_id\")->find();\r\n\t\t\t\t\r\n\t\t\t\t//构造新数组，并添加到浏览记录中\r\n\t\t\t\t$history = array(\r\n\t\t\t\t\t\t'goods_id'\t\t=>\t$goods_id,\r\n\t\t\t\t\t\t'goods_name'\t=>\t$goodsinfo['goods_name'],\r\n\t\t\t\t\t\t'shop_price'\t=>\t$goodsinfo['shop_price'],\r\n\t\t\t\t\t\t'goods_thumb'\t=>\t$goodsinfo['goods_thumb']\r\n\t\t\t\t);\r\n\t\t\t\t//往数组的头部添加数据\r\n\t\t\t\tarray_unshift($list, $history);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//获取商品信息并将其放入cookie中，用于浏览历史使用\r\n\t\t\tsetcookie('history',serialize($list),time()+24*3600,'/');\t\t\t\r\n\t\t}\r\n\t\t//将数组返回\r\n\t\treturn $list;\t\r\n\t}","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}